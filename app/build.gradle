import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.9.6'
        classpath 'org.aspectj:aspectjweaver:1.9.6'
    }
}
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.ktapp'
    compileSdkVersion 33
    buildToolsVersion '21.1.2'

    defaultConfig {
        applicationId "com.example.ktapp"
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    lintOptions {
        abortOnError true
    }
}

dependencies {
    implementation 'org.aspectj:aspectjrt:1.8.1'
    api 'com.google.dagger:dagger:2.28.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.28.1'

    api 'com.google.dagger:dagger-android:2.35.1'
    api 'com.google.dagger:dagger-android-support:2.28.1'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.28.1'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
//    implementation files('libs/rxandroid.jar')
//    implementation files('libs/rxjava-3.0.0.jar')
//    implementation files('libs/gintonic-debug.aar')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.32"

    // 协程核心库
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3"
    // 协程Android支持库
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3"
    // 协程Java8支持库
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.4.3"

    // lifecycle对于协程的扩展封装
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.navigation:navigation-ui:2.4.2'
    // implementation files('libs\\carplaySDK.aar')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    api "androidx.lifecycle:lifecycle-runtime:2.3.1"
    api "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    api "androidx.lifecycle:lifecycle-viewmodel:2.3.1"
    api "androidx.lifecycle:lifecycle-livedata:2.3.1"
    api "androidx.navigation:navigation-runtime:2.4.2"

    api 'com.kunminx.arch:unpeek-livedata:7.2.0-beta1'
    api 'com.kunminx.arch:strict-databinding:4.0.0-beta1'
    implementation 'com.jakewharton.rxbinding4:rxbinding:4.0.0'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    annotationProcessor("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.5.0")
    implementation project(":CommonLib")
}


final def log1 = project.logger
final def variants = project.android.applicationVariants

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log1.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log1.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log1.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log1.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log1.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log1.debug message.message, message.thrown
                    break;
            }
        }
    }
}