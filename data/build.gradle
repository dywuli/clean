plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}
android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    namespace 'com.android.arch.data'
    compileSdk globalConfiguration.getAt("androidCompileSdkVersion")

    defaultConfig {
        minSdk globalConfiguration.getAt("androidMinSdkVersion")
        targetSdk globalConfiguration.getAt("androidTargetSdkVersion")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    def dataDependencies = rootProject.ext.dataDependencies


    implementation project(':domain')
    compileOnly dataDependencies.javaxAnnotation
    implementation dataDependencies.javaxInject
    implementation dataDependencies.okHttp
    implementation dataDependencies.gson
    implementation dataDependencies.rxJava
    implementation dataDependencies.rxAndroid
    implementation dataDependencies.androidAnnotations

    def testDependencies = rootProject.ext.TestDependencies
    testImplementation testDependencies.junit
    testImplementation testDependencies.assertj
    testImplementation testDependencies.mockito
    testImplementation testDependencies.robolectric
    testImplementation testDependencies.espresso

    def mvpDaggerDependencies = rootProject.ext.mvpDaggerDependencies
    implementation mvpDaggerDependencies.room_runtime
    annotationProcessor mvpDaggerDependencies.room_complier
    kapt mvpDaggerDependencies.room_complier
    implementation mvpDaggerDependencies.room_rxjava2
    implementation mvpDaggerDependencies.room_guava
}